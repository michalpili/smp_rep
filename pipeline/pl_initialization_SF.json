{
	"name": "pl_initialization_SF",
	"properties": {
		"activities": [
			{
				"name": "SF - Create ColsWithoutSystemCols procedure",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE OR ALTER PROCEDURE [SF_Archive].[ColsWithoutSystemCols]\n    @TableName varchar(max)\nAS\nBEGIN\n\tdeclare @cols varchar(max), @query varchar(max);\n\tSELECT  @cols = STUFF\n    (\n        ( \n            SELECT DISTINCT '], [' + name\n            FROM sys.columns\n            where object_id = (\n                select top 1 object_id from sys.objects\n                where name = @TableName \n            )\n            and name not in ('Id', 'IsDeleted', 'SetupOwnerId', 'CreatedById','LastModifiedById','SystemModstamp')\n            FOR XML PATH('')\n        ), 1, 2, ''\n    ) + ']';\nSELECT @query = 'select ' + @cols + ' from [SF_Archive].' + '[' + @TableName + '] where IsDeleted = 0';\nEXEC (@query);\nEND;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - Create mig_object_list table",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "DROP TABLE IF EXISTS [Audit].[mig_objects_list];\nCREATE TABLE [Audit].[mig_objects_list] (\n    id int identity(1,1),\n    objectname varchar(1000),\n    systemname varchar(1000),\n    category varchar(1000),\n    sql text,\n    enabled int,\n    order_position int,\n    extract int,\n    load int,\n    insert_datetime datetime default GETDATE()\n);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - simple MIG_OBJECTS",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SF - Create mig_object_list table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "insert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('AzureSBConfiguration__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('PKB__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('pkb_ka__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Quote_Setup__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('FieldDefinition','Salesforce','Salesforce settings',null,1,0,0,0);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('EntityDefinition','Salesforce','Salesforce settings',null,1,0,0,0);\n\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - standard MIG_OBJECTS",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SF - simple MIG_OBJECTS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "\n--- Lead\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Account','Salesforce','Salesforce Standard',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Contact','Salesforce','Salesforce Standard',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Lead','Salesforce','Salesforce Standard',\n'\nselect\nt.LastName,\nt.FirstName,\nt.Salutation,\nt.Title,\nt.Company,\nt.Street,\nt.City,\nt.State,\nt.PostalCode,\nt.Country,\nt.Latitude,\nt.Longitude,\nt.GeocodeAccuracy,\nt.city,\nt.country,\nt.geocodeAccuracy,\nt.latitude,\nt.longitude,\nt.postalCode,\nt.state,\nt.street,\nt.Phone,\nt.MobilePhone,\nt.Fax,\nt.Email,\nt.Website,\nt.Description,\nt.LeadSource,\nt.Status,\nt.Industry,\nt.Rating,\nt.AnnualRevenue,\nt.NumberOfEmployees,\nt.HasOptedOutOfEmail,\nt.IsConverted,\nt.ConvertedDate,\nt.IsUnreadByOwner,\nt.CreatedDate,\nt.LastModifiedDate,\nt.DoNotCall,\nt.HasOptedOutOfFax,\nt.smagicinteract__SMSOptOut__c,\nt.Unica_AddressLine1__c,\nt.Unica_AddressLine2__c,\nt.Unica_Base_ID__c,\nt.Unica_City__c,\nt.Unica_MDB_ID__c,\nt.Unica_ZipCode__c\nfrom SF_archive.Lead t\nwhere t.IsDeleted =0\n',1,0,1,1);\n\n---"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - proc_sf_sql_extract",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE OR ALTER PROCEDURE [SF_Archive].[proc_sf_sql_extract]\n    @ObjectName varchar(max)\nAS\nBEGIN\ndeclare @query varchar(max);\nset @query = (select top 1 sql from audit.mig_objects_list where objectname='' + @ObjectName + '' and enabled=1);\n\nexec (@query);\nEND"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "0. pl - Initialization"
		},
		"annotations": []
	}
}