{
	"name": "pl_initialization_SF",
	"properties": {
		"activities": [
			{
				"name": "SF - Create ColsWithoutSystemCols procedure",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE OR ALTER PROCEDURE [SF_Archive].[ColsWithoutSystemCols]\n    @TableName varchar(max)\nAS\nBEGIN\n\tdeclare @cols varchar(max), @query varchar(max);\n\tSELECT  @cols = STUFF\n    (\n        ( \n            SELECT DISTINCT '], [' + name\n            FROM sys.columns\n            where object_id = (\n                select top 1 object_id from sys.objects\n                where name = @TableName \n            )\n            and name not in ('Id', 'IsDeleted', 'SetupOwnerId', 'CreatedById','LastModifiedById','SystemModstamp')\n            FOR XML PATH('')\n        ), 1, 2, ''\n    ) + ']';\nSELECT @query = 'select ' + @cols + ' from [SF_Archive].' + '[' + @TableName + '] where IsDeleted = 0';\nEXEC (@query);\nEND;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - Create mig_object_list table",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "DROP TABLE IF EXISTS [Audit].[mig_objects_list];\nCREATE TABLE [Audit].[mig_objects_list] (\n    id int identity(1,1),\n    objectname varchar(1000),\n    systemname varchar(1000),\n    category varchar(1000),\n    sql text,\n    enabled int,\n    order_position int,\n    extract int,\n    load int,\n    insert_datetime datetime default GETDATE()\n);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - simple MIG_OBJECTS",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SF - Create mig_object_list table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "insert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('AzureSBConfiguration__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('PKB__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('pkb_ka__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Quote_Setup__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('FieldDefinition','Salesforce','Salesforce settings',null,1,0,0,0);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('EntityDefinition','Salesforce','Salesforce settings',null,1,0,0,0);\n\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - standard MIG_OBJECTS",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SF - simple MIG_OBJECTS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "\n--- Lead\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Account','Salesforce','Salesforce Standard',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Contact','Salesforce','Salesforce Standard',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Lead','Salesforce','Salesforce Standard',\n'\nselect\nl.LastName,\nl.FirstName,\nl.Salutation,\nl.Title,\nl.Company,\nl.Street,\nl.City,\nl.State,\nl.PostalCode,\nl.Country,\nl.Latitude,\nl.Longitude,\nl.GeocodeAccuracy,\nl.Phone,\nl.MobilePhone,\nl.Fax,\nl.Email,\nl.Website,\nl.Description,\nl.LeadSource,\nl.Status,\nl.Industry,\nl.Rating,\nl.AnnualRevenue,\nl.NumberOfEmployees,\nl.HasOptedOutOfEmail,\nl.IsConverted,\nl.ConvertedDate, \ncase \n\twhen l.IsConverted =1 \n\tthen (select m.Id from audit.mig_mapIDs m where m.LegacyId__c = l.ConvertedAccountId and m.objectname=''Account'') \nend ConvertedAccountId,\ncase \n\twhen l.IsConverted =1 \n\tthen (select m.PersonContactId from audit.mig_mapIDs m where m.LegacyId__c = l.ConvertedAccountId and m.objectname=''Account'') \nend ConvertedContactId,\nl.IsUnreadByOwner,\nDATETRUNC(day, CONVERT(DATETIME, l.CreatedDate)) as CreatedDate,\nl.LastModifiedDate,\nl.DoNotCall,\nl.HasOptedOutOfFax,\nl.smagicinteract__SMSOptOut__c,\nl.Unica_AddressLine1__c,\nl.Unica_AddressLine2__c,\nl.Unica_Base_ID__c,\nl.Unica_City__c,\nl.Unica_MDB_ID__c,\nl.Unica_ZipCode__c\nfrom SF_archive.Lead l\nwhere l.IsDeleted = 0 \nand (\n\texists (select 1 from [Audit].[mig_account_list] a where l.ConvertedAccountId = a.AccountId)\n\tor \n\tl.ConvertedAccountId is null\n)\n',1,0,1,1);\n\n---"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - proc_sf_sql_extract",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SF - Create mig_object_list table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE OR ALTER PROCEDURE [SF_Archive].[proc_sf_sql_extract]\n    @ObjectName varchar(max)\nAS\nBEGIN\ndeclare @query varchar(max);\nset @query = (select top 1 sql from audit.mig_objects_list where objectname='' + @ObjectName + '' and enabled=1);\n\nexec (@query);\nEND"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - Create mig_mapIDs",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "DROP TABLE IF EXISTS [Audit].[mig_mapIDs];\nCREATE TABLE [Audit].[mig_mapIDs] (\n    objectname varchar(1000),\n    Id varchar(1000),\n    LegacyId__c varchar(1000),\n    PersonContactId varchar(1000),\n    insert_datetime datetime default GETDATE()\n);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "SF - Create mig_account_list",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='mig_account_list' and xtype='U')\n    CREATE TABLE [Audit].[mig_account_list] (\n        AccountId varchar(1000),\n        insert_datetime datetime default GETDATE()\n    )\nGO"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "0. pl - Initialization"
		},
		"annotations": []
	}
}