{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-smp-sandbox-weu-002"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"AzureSqlDatabaseMIG_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseMIG'"
		},
		"Leg_SalesforceTEST_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Leg_SalesforceTEST'"
		},
		"Leg_SalesforceTEST_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Leg_SalesforceTEST'"
		},
		"Tar_SalesforceTEST_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Tar_SalesforceTEST'"
		},
		"Tar_SalesforceTEST_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Tar_SalesforceTEST'"
		},
		"AmazonS31_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS31'"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"Leg_SalesforceTEST_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://falckcrm--pacmtest.sandbox.my.salesforce.com"
		},
		"Leg_SalesforceTEST_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "azuredatafactory@falck.com.pacmtest"
		},
		"Tar_SalesforceTEST_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().URL}"
		},
		"Tar_SalesforceTEST_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "@{linkedService().UserName}"
		},
		"AmazonS31_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAXQJG6VWN7GODEQ5S"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://migdevelopment.westeurope.batch.azure.com"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "MIG"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "migdevelopment"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "migdevelopment",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseMIG')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseMIG_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Leg_SalesforceTEST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Leg_SalesforceTEST_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Leg_SalesforceTEST_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Leg_SalesforceTEST_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Leg_SalesforceTEST_securityToken')]"
					},
					"apiVersion": "59.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tar_SalesforceTEST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"URL": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Tar_SalesforceTEST_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Tar_SalesforceTEST_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Tar_SalesforceTEST_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Tar_SalesforceTEST_securityToken')]"
					},
					"apiVersion": "59.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_initialization_ARIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AR - Cleanup DB - drop Aria tables",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "DECLARE @sql NVARCHAR(max)=''\nSELECT @sql += 'DROP TABLE ' + '[' + TABLE_SCHEMA + '].[' + TABLE_NAME + ']' FROM INFORMATION_SCHEMA.TABLES \nWHERE TABLE_SCHEMA = 'Aria_Archive_1' \nExec Sp_executesql @sql\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "0. pl - Initialization"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseMIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_initialization_GEN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create audit procedure",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Create audit table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "CREATE OR ALTER PROCEDURE Audit.mig_recon_stg_db_load_proc\n    @pipeline varchar(1000),\n    @filename varchar(1000),\n    @rowsread INT,\n    @rowscopied INT,\n    @copyduration INT,\n    @metric varchar(1000)\nAS\nBEGIN\n    insert into Audit.mig_recon_stg_db_load (pipeline, filename, rowsread, rowscopied, copyduration, metric) values (@pipeline,@filename, @rowsread, @rowscopied, @copyduration, @metric )\nEND;\n\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Create audit table",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DROP TABLE IF EXISTS Audit.mig_recon_stg_db_load;\nCREATE TABLE Audit.mig_recon_stg_db_load(\n    id int identity(1,1),\n    pipeline varchar(1000),\n    filename varchar(1000),\n    rowsread int,\n    rowscopied int,\n    copyduration int,\n    comment varchar(1000),\n    metric varchar(1000),\n    insert_datetime datetime default GETDATE()\n);"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "0. pl - Initialization"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseMIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_initialization_SF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SF - Create ColsWithoutSystemCols procedure",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "CREATE OR ALTER PROCEDURE [SF_Archive].[ColsWithoutSystemCols]\n    @TableName varchar(max)\nAS\nBEGIN\n\tdeclare @cols varchar(max), @query varchar(max);\n\tSELECT  @cols = STUFF\n    (\n        ( \n            SELECT DISTINCT '], [' + name\n            FROM sys.columns\n            where object_id = (\n                select top 1 object_id from sys.objects\n                where name = @TableName \n            )\n            and name not in ('Id', 'IsDeleted', 'SetupOwnerId', 'CreatedById','LastModifiedById','SystemModstamp')\n            FOR XML PATH('')\n        ), 1, 2, ''\n    ) + ']';\nSELECT @query = 'select ' + @cols + ' from [SF_Archive].' + '[' + @TableName + '] where IsDeleted = 0';\nEXEC (@query);\nEND;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "SF - Create mig_object_list table",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DROP TABLE IF EXISTS [Audit].[mig_objects_list];\nCREATE TABLE [Audit].[mig_objects_list] (\n    id int identity(1,1),\n    objectname varchar(1000),\n    systemname varchar(1000),\n    category varchar(1000),\n    sql text,\n    enabled int,\n    order_position int,\n    extract int,\n    load int,\n    insert_datetime datetime default GETDATE()\n);"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "SF - simple MIG_OBJECTS",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SF - Create mig_object_list table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "insert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('AzureSBConfiguration__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('PKB__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('pkb_ka__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Quote_Setup__c','Salesforce','Salesforce settings',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('FieldDefinition','Salesforce','Salesforce settings',null,1,0,0,0);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('EntityDefinition','Salesforce','Salesforce settings',null,1,0,0,0);\n\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "SF - standard MIG_OBJECTS",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "SF - simple MIG_OBJECTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "\n--- Lead\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Account','Salesforce','Salesforce Standard',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Contact','Salesforce','Salesforce Standard',null,1,0,1,1);\ninsert into [Audit].[mig_objects_list] (objectname , systemname , category, sql, enabled, order_position,extract, load) values ('Lead','Salesforce','Salesforce Standard',\n'\nselect\nt.LastName,\nt.FirstName,\nt.Salutation,\nt.Title,\nt.Company,\nt.Street,\nt.City,\nt.State,\nt.PostalCode,\nt.Country,\nt.Latitude,\nt.Longitude,\nt.GeocodeAccuracy,\nt.Phone,\nt.MobilePhone,\nt.Fax,\nt.Email,\nt.Website,\nt.Description,\nt.LeadSource,\nt.Status,\nt.Industry,\nt.Rating,\nt.AnnualRevenue,\nt.NumberOfEmployees,\nt.HasOptedOutOfEmail,\n0 as t.IsConverted,\nnull as t.ConvertedDate,\n--case when t.IsConverted = 1 then ''0017a00002SXIlXAAX'' else null end ConvertedAccountId,\n--case when t.IsConverted = 1 then ''0037a000029ISiTAAW'' else null end ConvertedContactId,\nt.IsUnreadByOwner,\nt.CreatedDate,\nt.LastModifiedDate,\nt.DoNotCall,\nt.HasOptedOutOfFax,\nt.smagicinteract__SMSOptOut__c,\nt.Unica_AddressLine1__c,\nt.Unica_AddressLine2__c,\nt.Unica_Base_ID__c,\nt.Unica_City__c,\nt.Unica_MDB_ID__c,\nt.Unica_ZipCode__c\nfrom SF_archive.Lead t\nwhere t.IsDeleted =0\n',1,0,1,1);\n\n---"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "SF - proc_sf_sql_extract",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseMIG",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "CREATE OR ALTER PROCEDURE [SF_Archive].[proc_sf_sql_extract]\n    @ObjectName varchar(max)\nAS\nBEGIN\ndeclare @query varchar(max);\nset @query = (select top 1 sql from audit.mig_objects_list where objectname='' + @ObjectName + '' and enabled=1);\n\nexec (@query);\nEND"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "0. pl - Initialization"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseMIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LegSalesforceObject')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Leg_SalesforceTEST",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SFObjectName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds - Salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@dataset().SFObjectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Leg_SalesforceTEST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TarSalesforceObject')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Tar_SalesforceTEST",
					"type": "LinkedServiceReference",
					"parameters": {
						"URL": {
							"value": "@dataset().SFLinkedServiceURL",
							"type": "Expression"
						},
						"UserName": {
							"value": "@dataset().SFLinkedServiceUserName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"SFObjectName": {
						"type": "string"
					},
					"SFLinkedServiceURL": {
						"type": "string"
					},
					"SFLinkedServiceUserName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds - Salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@dataset().SFObjectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Tar_SalesforceTEST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_aria_all_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "aria-aws-copy-all"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_salesforce_extract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "salesforce-extract"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_salesforce_extract_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "salesforce-extract"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_custom_folder_subfolders_files_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "salesforce-extract"
					},
					"columnDelimiter": "|",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "api_queue_id",
						"type": "String"
					},
					{
						"name": "plan_instance_no",
						"type": "String"
					},
					{
						"name": "parent_plan_instance_no",
						"type": "String"
					},
					{
						"name": "plan_instance_cdid",
						"type": "String"
					},
					{
						"name": "acct_no",
						"type": "String"
					},
					{
						"name": "api_method_name",
						"type": "String"
					},
					{
						"name": "create_date",
						"type": "String"
					},
					{
						"name": "create_user",
						"type": "String"
					},
					{
						"name": "effective_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_main_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "falck-migration/falck-migration-reporting-raw",
						"container": "aria-aws-copy-all"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "api_queue_id",
						"type": "String"
					},
					{
						"name": "plan_instance_no",
						"type": "String"
					},
					{
						"name": "parent_plan_instance_no",
						"type": "String"
					},
					{
						"name": "plan_instance_cdid",
						"type": "String"
					},
					{
						"name": "acct_no",
						"type": "String"
					},
					{
						"name": "api_method_name",
						"type": "String"
					},
					{
						"name": "create_date",
						"type": "String"
					},
					{
						"name": "create_user",
						"type": "String"
					},
					{
						"name": "effective_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_main_folder_subfolders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('falck-migration/falck-migration-reporting-raw/',dataset().FolderName)",
							"type": "Expression"
						},
						"container": "aria-aws-copy-all"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "api_queue_id",
						"type": "String"
					},
					{
						"name": "plan_instance_no",
						"type": "String"
					},
					{
						"name": "parent_plan_instance_no",
						"type": "String"
					},
					{
						"name": "plan_instance_cdid",
						"type": "String"
					},
					{
						"name": "acct_no",
						"type": "String"
					},
					{
						"name": "api_method_name",
						"type": "String"
					},
					{
						"name": "create_date",
						"type": "String"
					},
					{
						"name": "create_user",
						"type": "String"
					},
					{
						"name": "effective_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_main_folder_subfolders_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds - Azure Storage"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('falck-migration/falck-migration-reporting-raw/',dataset().FolderName)",
							"type": "Expression"
						},
						"container": "aria-aws-copy-all"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "api_queue_id",
						"type": "String"
					},
					{
						"name": "plan_instance_no",
						"type": "String"
					},
					{
						"name": "parent_plan_instance_no",
						"type": "String"
					},
					{
						"name": "plan_instance_cdid",
						"type": "String"
					},
					{
						"name": "acct_no",
						"type": "String"
					},
					{
						"name": "api_method_name",
						"type": "String"
					},
					{
						"name": "create_date",
						"type": "String"
					},
					{
						"name": "create_user",
						"type": "String"
					},
					{
						"name": "effective_date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_mig_stg_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseMIG",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ds - DB"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "client_no",
						"type": "nvarchar"
					},
					{
						"name": " acct_no",
						"type": "nvarchar"
					},
					{
						"name": " userid",
						"type": "nvarchar"
					},
					{
						"name": " password",
						"type": "nvarchar"
					},
					{
						"name": " plan_type",
						"type": "nvarchar"
					},
					{
						"name": " reg_code",
						"type": "nvarchar"
					},
					{
						"name": " plan_no",
						"type": "nvarchar"
					},
					{
						"name": " plan_date",
						"type": "nvarchar"
					},
					{
						"name": " first_name",
						"type": "nvarchar"
					},
					{
						"name": " last_name",
						"type": "nvarchar"
					},
					{
						"name": " mi",
						"type": "nvarchar"
					},
					{
						"name": " address1",
						"type": "nvarchar"
					},
					{
						"name": " address2",
						"type": "nvarchar"
					},
					{
						"name": " city",
						"type": "nvarchar"
					},
					{
						"name": " locality",
						"type": "nvarchar"
					},
					{
						"name": " state_prov",
						"type": "nvarchar"
					},
					{
						"name": " country",
						"type": "nvarchar"
					},
					{
						"name": " postal_code",
						"type": "nvarchar"
					},
					{
						"name": " ssn",
						"type": "nvarchar"
					},
					{
						"name": " phone_npa",
						"type": "nvarchar"
					},
					{
						"name": " phone_nxx",
						"type": "nvarchar"
					},
					{
						"name": " phone_suffix",
						"type": "nvarchar"
					},
					{
						"name": " phone_extension",
						"type": "nvarchar"
					},
					{
						"name": " phone_country_code",
						"type": "nvarchar"
					},
					{
						"name": " intl_phone",
						"type": "nvarchar"
					},
					{
						"name": " pay_method",
						"type": "nvarchar"
					},
					{
						"name": " notify_method",
						"type": "nvarchar"
					},
					{
						"name": " next_bill_date",
						"type": "nvarchar"
					},
					{
						"name": " bill_day",
						"type": "nvarchar"
					},
					{
						"name": " last_bill_date",
						"type": "nvarchar"
					},
					{
						"name": " last_bill_thru_date",
						"type": "nvarchar"
					},
					{
						"name": " status_cd",
						"type": "nvarchar"
					},
					{
						"name": " process_flag",
						"type": "nvarchar"
					},
					{
						"name": " lang_no",
						"type": "nvarchar"
					},
					{
						"name": " legacy",
						"type": "nvarchar"
					},
					{
						"name": " tax_id",
						"type": "nvarchar"
					},
					{
						"name": " senior_acct_no",
						"type": "nvarchar"
					},
					{
						"name": " carrier",
						"type": "nvarchar"
					},
					{
						"name": " comments",
						"type": "nvarchar"
					},
					{
						"name": " trans_id",
						"type": "nvarchar"
					},
					{
						"name": " origin_no",
						"type": "nvarchar"
					},
					{
						"name": " old_userid",
						"type": "nvarchar"
					},
					{
						"name": " old_acct_no",
						"type": "nvarchar"
					},
					{
						"name": " aup_no",
						"type": "nvarchar"
					},
					{
						"name": " created",
						"type": "nvarchar"
					},
					{
						"name": " update_user",
						"type": "nvarchar"
					},
					{
						"name": " update_date",
						"type": "nvarchar"
					},
					{
						"name": " client_acct_id",
						"type": "nvarchar"
					},
					{
						"name": " feature_mask",
						"type": "nvarchar"
					},
					{
						"name": " promo_cd",
						"type": "nvarchar"
					},
					{
						"name": " no_edit_ind",
						"type": "nvarchar"
					},
					{
						"name": " pop_no",
						"type": "nvarchar"
					},
					{
						"name": " alt_email",
						"type": "nvarchar"
					},
					{
						"name": " alt_homepage",
						"type": "nvarchar"
					},
					{
						"name": " reg_auth_result",
						"type": "nvarchar"
					},
					{
						"name": " status_date",
						"type": "nvarchar"
					},
					{
						"name": " status_degrade_date",
						"type": "nvarchar"
					},
					{
						"name": " secret_question_answer",
						"type": "nvarchar"
					},
					{
						"name": " test_acct_ind",
						"type": "nvarchar"
					},
					{
						"name": " company_name",
						"type": "nvarchar"
					},
					{
						"name": " resp_level_cd",
						"type": "nvarchar"
					},
					{
						"name": " senior_acct_date",
						"type": "nvarchar"
					},
					{
						"name": " inv_approval_req_ind",
						"type": "nvarchar"
					},
					{
						"name": " currency_cd",
						"type": "nvarchar"
					},
					{
						"name": " eu_notes",
						"type": "nvarchar"
					},
					{
						"name": " plan_type_no",
						"type": "nvarchar"
					},
					{
						"name": " plan_roll_override_ind",
						"type": "nvarchar"
					},
					{
						"name": " last_arrears_bill_thru_date",
						"type": "nvarchar"
					},
					{
						"name": " alt_msg_template_no",
						"type": "nvarchar"
					},
					{
						"name": " require_special_inv",
						"type": "nvarchar"
					},
					{
						"name": " date_to_suspend",
						"type": "nvarchar"
					},
					{
						"name": " alt_master_rate_sched_no",
						"type": "nvarchar"
					},
					{
						"name": " reg_load_seq",
						"type": "nvarchar"
					},
					{
						"name": " pop_phone_no",
						"type": "nvarchar"
					},
					{
						"name": " birthdate",
						"type": "nvarchar"
					},
					{
						"name": " cell_phone_npa",
						"type": "nvarchar"
					},
					{
						"name": " cell_phone_nxx",
						"type": "nvarchar"
					},
					{
						"name": " cell_phone_suffix",
						"type": "nvarchar"
					},
					{
						"name": " work_phone_npa",
						"type": "nvarchar"
					},
					{
						"name": " work_phone_nxx",
						"type": "nvarchar"
					},
					{
						"name": " work_phone_suffix",
						"type": "nvarchar"
					},
					{
						"name": " work_phone_extension",
						"type": "nvarchar"
					},
					{
						"name": " date_to_expire",
						"type": "nvarchar"
					},
					{
						"name": " created_by",
						"type": "nvarchar"
					},
					{
						"name": " display_userid",
						"type": "nvarchar"
					},
					{
						"name": " donation_plan_amount",
						"type": "nvarchar"
					},
					{
						"name": " reg_dad",
						"type": "nvarchar"
					},
					{
						"name": " dw_export_seq",
						"type": "nvarchar"
					},
					{
						"name": " fax_phone",
						"type": "nvarchar"
					},
					{
						"name": " salutation",
						"type": "nvarchar"
					},
					{
						"name": " job_title",
						"type": "nvarchar"
					},
					{
						"name": " intl_cell_phone",
						"type": "nvarchar"
					},
					{
						"name": " master_plan_recurring_factor",
						"type": "nvarchar"
					},
					{
						"name": " intl_work_phone",
						"type": "nvarchar"
					},
					{
						"name": " plan_assign_api_receipt_id",
						"type": "nvarchar"
					},
					{
						"name": " status_assign_api_receipt_id",
						"type": "nvarchar"
					},
					{
						"name": " acct_create_api_receipt_id",
						"type": "nvarchar"
					},
					{
						"name": " address_seq",
						"type": "nvarchar"
					},
					{
						"name": " taxpayer_id",
						"type": "nvarchar"
					},
					{
						"name": " last_recur_bill_date",
						"type": "nvarchar"
					},
					{
						"name": " last_usage_bill_date",
						"type": "nvarchar"
					},
					{
						"name": " max_seq_no",
						"type": "nvarchar"
					},
					{
						"name": " seq_func_group_no",
						"type": "nvarchar"
					},
					{
						"name": " address3",
						"type": "nvarchar"
					},
					{
						"name": " notify_tmplt_grp_seq_id",
						"type": "nvarchar"
					},
					{
						"name": " test_acct_date",
						"type": "nvarchar"
					},
					{
						"name": " acct_balance",
						"type": "nvarchar"
					},
					{
						"name": " acct_start_date",
						"type": "nvarchar"
					},
					{
						"name": " default_billing_group_no",
						"type": "nvarchar"
					},
					{
						"name": " acct_address_seq",
						"type": "nvarchar"
					},
					{
						"name": " inv_posting_method_cd",
						"type": "nvarchar"
					},
					{
						"name": " consumer_acct_ind",
						"type": "nvarchar"
					},
					{
						"name": " list_start_master_file",
						"type": "nvarchar"
					},
					{
						"name": " purchase_order_no",
						"type": "nvarchar"
					},
					{
						"name": " locale_no",
						"type": "nvarchar"
					},
					{
						"name": " legal_entity_no",
						"type": "nvarchar"
					},
					{
						"name": " perpetual_payment_balance",
						"type": "nvarchar"
					},
					{
						"name": " is_anonymized",
						"type": "nvarchar"
					},
					{
						"name": "filename",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().FileName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseMIG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS31')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('AmazonS31_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS31_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		}
	]
}